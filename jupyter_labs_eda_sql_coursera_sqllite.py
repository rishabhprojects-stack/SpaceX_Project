# -*- coding: utf-8 -*-
"""jupyter-labs-eda-sql-coursera_sqllite.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vFEyrlJuRiVFHXCS45YUH_2xyr4zHZfs

<p style="text-align:center">
    <a href="https://skills.network" target="_blank">
    <img src="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/assets/logos/SN_web_lightmode.png" width="200" alt="Skills Network Logo">
    </a>
</p>

<h1 align=center><font size = 5>Assignment: SQL Notebook for Peer Assignment</font></h1>

Estimated time needed: **60** minutes.


## Overview of the DataSet

SpaceX has gained worldwide attention for a series of historic milestones.

It is the only private company ever to return a spacecraft from low-earth orbit, which it first accomplished in December 2010.
SpaceX advertises Falcon 9 rocket launches on its website with a cost of 62 million dollars wheras other providers cost upward of 165 million dollars each, much of the savings is because Space X can reuse the first stage.


Therefore if we can determine if the first stage will land, we can determine the cost of a launch.

This information can be used if an alternate company wants to bid against SpaceX for a rocket launch.

This dataset includes a record for each payload carried during a SpaceX mission into outer space.

### Download the datasets

This assignment requires you to load the spacex dataset.

In many cases the dataset to be analyzed is available as a .CSV (comma separated values) file, perhaps on the internet. Click on the link below to download and save the dataset (.CSV file):

 <a href="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/labs/module_2/data/Spacex.csv" target="_blank">Spacex DataSet</a>
"""

!pip install sqlalchemy==1.3.9

"""### Connect to the database

Let us first load the SQL extension and establish a connection with the database

"""

!pip install ipython-sql
!pip install ipython-sql prettytable

# Commented out IPython magic to ensure Python compatibility.
# %load_ext sql

import csv, sqlite3
import prettytable
prettytable.DEFAULT = 'DEFAULT'

con = sqlite3.connect("my_data1.db")
cur = con.cursor()

!pip install -q pandas

# Commented out IPython magic to ensure Python compatibility.
# %sql sqlite:///my_data1.db

import pandas as pd
df = pd.read_csv("https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/labs/module_2/data/Spacex.csv")
df.to_sql("SPACEXTBL", con, if_exists='replace', index=False,method="multi")

"""**Note:This below code is added to remove blank rows from table**

"""

# Commented out IPython magic to ensure Python compatibility.
#DROP THE TABLE IF EXISTS

# %sql DROP TABLE IF EXISTS SPACEXTABLE;

# Commented out IPython magic to ensure Python compatibility.
# %sql create table SPACEXTABLE as select * from SPACEXTBL where Date is not null







# Commented out IPython magic to ensure Python compatibility.
# %sql select * from SPACEXTABLE where Launch_Site like 'CCA%' limit 5;



# Commented out IPython magic to ensure Python compatibility.
# %sql select sum(PAYLOAD_MASS__KG_) from SPACEXTABLE where Customer = 'NASA (CRS)'



# Commented out IPython magic to ensure Python compatibility.
# %sql select avg(PAYLOAD_MASS__KG_) from SPACEXTABLE where Booster_Version like 'F9 v1.1%'



# Commented out IPython magic to ensure Python compatibility.
# %sql select min(DATE) from SPACEXTABLE where Landing_Outcome = 'Success (ground pad)'


# Commented out IPython magic to ensure Python compatibility.
# %sql select Booster_Version from SPACEXTABLE where Landing_Outcome = 'Success (drone ship)' and PAYLOAD_MASS__KG_ between 4000 and 6000



# Commented out IPython magic to ensure Python compatibility.
# %sql select Mission_Outcome, count(*) from SPACEXTABLE group by Mission_Outcome



# Commented out IPython magic to ensure Python compatibility.
# %sql select Booster_Version from SPACEXTABLE where PAYLOAD_MASS__KG_=(select max(PAYLOAD_MASS__KG_) from SPACEXTABLE)



# Commented out IPython magic to ensure Python compatibility.
# %sql select SUBSTR(DATE, 6, 2) as Month, Landing_Outcome, Booster_Version, Launch_Site from SPACEXTABLE where Landing_Outcome = 'Failure (drone ship)' and SUBSTR(DATE, 0, 5) = '2015'


# Commented out IPython magic to ensure Python compatibility.
# %sql select Landing_Outcome, count(*) as Count from SPACEXTABLE where Date between '2010-06-04' and '2017-03-20' group by Landing_Outcome order by Count desc

